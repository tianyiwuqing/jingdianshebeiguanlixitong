<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lynu.dao.TableRepertoryOutMapper">
  <resultMap id="BaseResultMap" type="com.lynu.bean.TableRepertoryOut">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="repertoryoutbills" jdbcType="VARCHAR" property="repertoryoutbills" />
    <result column="equipmentcode" jdbcType="VARCHAR" property="equipmentcode" />
    <result column="receivedepartmentid" jdbcType="VARCHAR" property="receivedepartmentid" />
    <result column="receiveemployeeid" jdbcType="VARCHAR" property="receiveemployeeid" />
    <result column="createemployeeid" jdbcType="VARCHAR" property="createemployeeid" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="codeabstract" jdbcType="VARCHAR" property="codeabstract" />
    <result column="is_delate" jdbcType="INTEGER" property="isDelate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, repertoryoutbills, equipmentcode, receivedepartmentid, receiveemployeeid, createemployeeid, 
    create_time, update_time, codeabstract, is_delate
  </sql>
  <select id="selectByExample" parameterType="com.lynu.bean.TableRepertoryOutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from table_repertory_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from table_repertory_out
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from table_repertory_out
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lynu.bean.TableRepertoryOutExample">
    delete from table_repertory_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lynu.bean.TableRepertoryOut">
    insert into table_repertory_out (id, repertoryoutbills, equipmentcode, 
      receivedepartmentid, receiveemployeeid, 
      createemployeeid, create_time, update_time, 
      codeabstract, is_delate)
    values (#{id,jdbcType=INTEGER}, #{repertoryoutbills,jdbcType=VARCHAR}, #{equipmentcode,jdbcType=VARCHAR}, 
      #{receivedepartmentid,jdbcType=VARCHAR}, #{receiveemployeeid,jdbcType=VARCHAR}, 
      #{createemployeeid,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{codeabstract,jdbcType=VARCHAR}, #{isDelate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lynu.bean.TableRepertoryOut">
    insert into table_repertory_out
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="repertoryoutbills != null">
        repertoryoutbills,
      </if>
      <if test="equipmentcode != null">
        equipmentcode,
      </if>
      <if test="receivedepartmentid != null">
        receivedepartmentid,
      </if>
      <if test="receiveemployeeid != null">
        receiveemployeeid,
      </if>
      <if test="createemployeeid != null">
        createemployeeid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="codeabstract != null">
        codeabstract,
      </if>
      <if test="isDelate != null">
        is_delate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="repertoryoutbills != null">
        #{repertoryoutbills,jdbcType=VARCHAR},
      </if>
      <if test="equipmentcode != null">
        #{equipmentcode,jdbcType=VARCHAR},
      </if>
      <if test="receivedepartmentid != null">
        #{receivedepartmentid,jdbcType=VARCHAR},
      </if>
      <if test="receiveemployeeid != null">
        #{receiveemployeeid,jdbcType=VARCHAR},
      </if>
      <if test="createemployeeid != null">
        #{createemployeeid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="codeabstract != null">
        #{codeabstract,jdbcType=VARCHAR},
      </if>
      <if test="isDelate != null">
        #{isDelate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lynu.bean.TableRepertoryOutExample" resultType="java.lang.Long">
    select count(*) from table_repertory_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update table_repertory_out
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.repertoryoutbills != null">
        repertoryoutbills = #{record.repertoryoutbills,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentcode != null">
        equipmentcode = #{record.equipmentcode,jdbcType=VARCHAR},
      </if>
      <if test="record.receivedepartmentid != null">
        receivedepartmentid = #{record.receivedepartmentid,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveemployeeid != null">
        receiveemployeeid = #{record.receiveemployeeid,jdbcType=VARCHAR},
      </if>
      <if test="record.createemployeeid != null">
        createemployeeid = #{record.createemployeeid,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.codeabstract != null">
        codeabstract = #{record.codeabstract,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelate != null">
        is_delate = #{record.isDelate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update table_repertory_out
    set id = #{record.id,jdbcType=INTEGER},
      repertoryoutbills = #{record.repertoryoutbills,jdbcType=VARCHAR},
      equipmentcode = #{record.equipmentcode,jdbcType=VARCHAR},
      receivedepartmentid = #{record.receivedepartmentid,jdbcType=VARCHAR},
      receiveemployeeid = #{record.receiveemployeeid,jdbcType=VARCHAR},
      createemployeeid = #{record.createemployeeid,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      codeabstract = #{record.codeabstract,jdbcType=VARCHAR},
      is_delate = #{record.isDelate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lynu.bean.TableRepertoryOut">
    update table_repertory_out
    <set>
      <if test="repertoryoutbills != null">
        repertoryoutbills = #{repertoryoutbills,jdbcType=VARCHAR},
      </if>
      <if test="equipmentcode != null">
        equipmentcode = #{equipmentcode,jdbcType=VARCHAR},
      </if>
      <if test="receivedepartmentid != null">
        receivedepartmentid = #{receivedepartmentid,jdbcType=VARCHAR},
      </if>
      <if test="receiveemployeeid != null">
        receiveemployeeid = #{receiveemployeeid,jdbcType=VARCHAR},
      </if>
      <if test="createemployeeid != null">
        createemployeeid = #{createemployeeid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="codeabstract != null">
        codeabstract = #{codeabstract,jdbcType=VARCHAR},
      </if>
      <if test="isDelate != null">
        is_delate = #{isDelate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lynu.bean.TableRepertoryOut">
    update table_repertory_out
    set repertoryoutbills = #{repertoryoutbills,jdbcType=VARCHAR},
      equipmentcode = #{equipmentcode,jdbcType=VARCHAR},
      receivedepartmentid = #{receivedepartmentid,jdbcType=VARCHAR},
      receiveemployeeid = #{receiveemployeeid,jdbcType=VARCHAR},
      createemployeeid = #{createemployeeid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      codeabstract = #{codeabstract,jdbcType=VARCHAR},
      is_delate = #{isDelate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>